{"version":3,"sources":["services/api.js","services/auth.js","assets/load.gif","components/Cadastro/index.js","components/Login/index.js","assets/imagemLogin.svg","assets/logotipo.svg","assets/imgFundo.svg","pages/Home/index.js","assets/logomini2.svg","components/Menu/index.js","components/CardGrupo/index.js","components/GrupoLista/index.js","components/Equipamento/index.js","components/SectionEquipamentos/index.js","components/ModalGraficos/index.js","assets/tutorial.svg","pages/Dashboard/index.js","components/ModalGrupo/index.js","components/ModalGrupoEditar/index.js","pages/Grupos/index.js","components/ModalGrupoEditarEq/index.js","pages/Equipamentos/index.js","pages/Perfil/index.js","routes.js","App.js","index.js"],"names":["api","axios","create","baseURL","interceptors","request","use","a","config","token","getToken","tokenUser","getTokenUser","headers","Authorization","TOKEN_KEY","EMAIL","NOME","TOKENUSER","isAuthenticated","sessionStorage","getItem","setLogin","setItem","setEmail","email","authenticate","senha","post","data","console","log","status","message","usuario","tokenuser","nome","MySwal","withReactContent","Swal","withRouter","props","useState","setNome","setSenha","verificaSenha","setVerificaSenha","erro","setErro","carregando","setCarregando","e","preventDefault","fire","position","icon","title","showConfirmButton","timer","history","push","text","className","onSubmit","style","color","htmlFor","size","type","placeholder","id","onChange","target","value","src","load","alt","exibir","setExibir","texto","setTexto","btnsHome","to","onClick","voltar","txtHome","useEffect","backgroundImage","imgFundo","logo","image","user","setUser","logomini","activeClassName","removeItem","clear","CardGrupo","grupo","valor","qtdEquipamentos","exibe","cor","setCor","Number","progresso","setProgresso","get","loadNomeEquipamento","marginBottom","width","backgroundColor","Grupos","infos","setItems","inicial","setInicial","tag","setTag","settings","arrows","dots","infinite","speed","slidesToShow","slidesToScroll","loadInfos","info","grupos","length","map","max_medicao","qtd_equipamentos","alert","loadSetores","moment","locale","Equipamento","porcentagem","ppm","clicou","atualiza","finaliza","corHumidade","setCorHumidade","corTemperatura","setCorTemperatura","corGas","setCorGas","humidadeValor","setHumidade","gas","setGas","temperaturaValor","setTemperatura","ultimaMedicao","setUltimaMedicao","porcentagemTemp","setPorcentagemTemp","porcentagemGas","setPorcentagemGas","loadDados","medicao","humidade","qt_ppm","temperatura","calcTemp","calcGas","criado","background","format","split","marginLeft","SectionEquipamentos","titulo","grupoId","open","listEquipamentos","setListEquipamentos","setAtualiza","equipamentos","loadEquipamentos","equipamento","display","alignItems","justifyContent","ModalGraficos","close","options","chart","height","zoom","autoScaleYaxis","dataLabels","enabled","series","name","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","annotations","yaxis","y","borderColor","label","show","xaxis","x","Date","getTime","yAxisIndex","markers","min","tickAmount","tooltip","custom","seriesIndex","dataPointIndex","situacao","w","bg","stroke","optionsTemp","optionsHum","loadMedicoes","medicoes","array","arrayTemp","arrayHum","item","padding","borderRadius","top","right","Dashboard","setgrupoId","grupoNome","setGrupoNome","eqNome","setEqNome","eqToken","setEqToken","setOpen","labels","colors","formatter","foreColor","borderWidth","opacity","dropShadow","left","blur","plotOptions","pie","startAngle","expandOnClick","offsetX","offsetY","customScale","offset","minAngleToShowLabel","donut","fontSize","fontFamily","fontWeight","val","total","showAlways","globals","seriesTotals","reduce","b","legend","showForSingleSeries","showForNullSeries","showForZeroSeries","horizontalAlign","floating","undefined","inverseOrder","tooltipHoverFormatter","useSeriesColors","strokeWidth","strokeColor","fillColors","radius","customHTML","itemMargin","horizontal","vertical","onItemClick","toggleDataSeries","onItemHover","highlightDataSeries","ModalGrupo","fechar","setGrupo","showCancelButton","confirmButtonText","cancelButtonText","then","result","novoNome","setNovoNome","put","maxLength","setGrupos","isOpen","setIsOpen","isOpenEd","setIsOpenEd","setGrupoId","loadGrupos","delete","iniciais","substring","deletar","nomeGrupo","equipamentoId","formSelect","setFormSelect","grupoSelected","setGrupoSelected","select","Equipamentos","setEquipamentos","setNomeGrupo","setEquipamentoId","Perfil","classeNome","setClasseNome","classeEmail","setClasseEmail","classeSenha","setClasseSenha","corNome","setCorNome","corEmail","setCorEmail","corSenha","setCorSenha","PrivateRoute","Component","component","rest","render","pathname","state","from","location","Routes","path","exact","Home","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.421f306d.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { getToken, getTokenUser} from \"./auth\";\r\nconst api = axios.create({\r\n  // baseURL: \"http://localhost:3333\",\r\n   baseURL: \"https://backt2safe.herokuapp.com/\",\r\n});\r\n\r\n\r\napi.interceptors.request.use(async config => {\r\n  const token = getToken();\r\n  const tokenUser = getTokenUser();\r\n  \r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  if(tokenUser){\r\n    config.headers.tokenUser = tokenUser;\r\n  }\r\n  \r\n  return config;\r\n});\r\n\r\n\r\n\r\nexport default api;","import api from './api';\r\nexport const TOKEN_KEY = \"token\";\r\nexport const EMAIL = \"email\";\r\nexport const NOME = \"nome\";\r\nexport const TOKENUSER = 'TokenUser';\r\n\r\n// export const isAuthenticated = async () => {\r\n//   let token = sessionStorage.getItem(TOKEN_KEY);\r\n\r\n//   if(!token){\r\n//     return null\r\n//   }\r\n\r\n\r\n//   let {data} = await api.get('/auth', {\r\n//     headers:{\r\n//       authorization: `Bearer ${token}`\r\n//     }\r\n//   })\r\n\r\n//   console.log(data);\r\n//   let{status} = data;\r\n//   if(status === 'sucesso'){\r\n//     return\r\n//   }\r\n  \r\n\r\n//   // sessionStorage.getItem(TOKEN_KEY) !== null;\r\n// }\r\n\r\nexport const isAuthenticated = () => sessionStorage.getItem(TOKEN_KEY) !== null;\r\n\r\nexport const getToken = () => sessionStorage.getItem(TOKEN_KEY);\r\nexport const getEmail = () => sessionStorage.getItem(EMAIL);\r\nexport const getNome = () => sessionStorage.getItem(NOME);\r\nexport const getTokenUser = () => sessionStorage.getItem(TOKENUSER);\r\n\r\nexport const setLogin = token => {sessionStorage.setItem(TOKEN_KEY, token)};\r\nexport const setEmail = email =>{sessionStorage.setItem(EMAIL, email)};\r\nexport const setNome = nome =>{sessionStorage.setItem(NOME, nome)};\r\nexport const setTokenUser = tokenuser =>{sessionStorage.setItem(TOKENUSER, tokenuser)};\r\n\r\n\r\nexport const authenticate = async (email,senha) =>{\r\n  const {data} = await api.post('/auth', {email, senha});\r\n\r\n  console.log(data)\r\n  const {status, message, token,usuario} = data;\r\n  if(status === 'sucesso'){\r\n    setLogin(token);\r\n    setTokenUser(usuario.token);\r\n    setEmail(usuario.email);\r\n    setNome(usuario.nome);\r\n    sessionStorage.setItem('nome', usuario.nome);\r\n\r\n  }\r\n  return [status, message]\r\n}\r\n\r\nexport const logout = () => {\r\n  sessionStorage.removeItem(TOKEN_KEY);\r\n  sessionStorage.removeItem(EMAIL);\r\n  sessionStorage.removeItem(NOME);\r\n  sessionStorage.removeItem(TOKENUSER);\r\n  sessionStorage.clear();\r\n};\r\n\r\nexport function signIn(){\r\n  return new Promise(resolve =>{\r\n    setTimeout(()=>{\r\n      resolve({\r\n        token: 'asdiajsdiasd',\r\n        user:{\r\n          name:'Bruno',\r\n          email: 'bruno@'\r\n        }\r\n      })\r\n    },2000)\r\n  })\r\n}","export default __webpack_public_path__ + \"static/media/load.e7fbbc19.gif\";","import { useState } from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { FiMail, FiUser, FiLock } from 'react-icons/fi';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nimport api from '../../services/api';\r\n\r\nimport load from '../../assets/load.gif';\r\nimport '../styles/cadastro.css';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nfunction Cadastro(props) {\r\n  const [nome, setNome] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  const [verificaSenha, setVerificaSenha] = useState('');\r\n  const [erro, setErro] = useState(false);\r\n  const [carregando, setCarregando] = useState(false);\r\n\r\n  async function cadastrar(e) {\r\n    e.preventDefault();\r\n    setCarregando(true);\r\n    setErro(false);\r\n    if(senha !== verificaSenha){\r\n      \r\n      return setErro(true);\r\n    }\r\n\r\n    let { data } = await api.post('/cadastro', { nome, email, senha });\r\n    setCarregando(false);\r\n    let { status, message } = data;\r\n\r\n    if (status === 'sucesso') {\r\n      await MySwal.fire({\r\n        position: 'center',\r\n        icon: 'success',\r\n        title: 'Cadastro realizado com sucesso!',\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n\r\n      })\r\n\r\n      props.history.push('/login');\r\n\r\n    } else {\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: message,\r\n      })\r\n    }\r\n    console.log(data);\r\n  }\r\n\r\n\r\n  return (\r\n    <form className=\"form-cadastro\" onSubmit={cadastrar}>\r\n      {erro && <p style={{color: 'red'}}>As senhas não conferem.</p>}\r\n      <div className=\"group-inputs\">\r\n        <label htmlFor=\"nome-cadastro\">\r\n          <FiUser size={20} color=\"#ccc\" />\r\n        </label>\r\n        <input \r\n          type=\"text\" \r\n          className=\"input\" \r\n          placeholder=\"Digite seu nome completo\" \r\n          id=\"nome-cadastro\" \r\n          onChange={e=> setNome(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"group-inputs\">\r\n        <label htmlFor=\"email-cadastro\">\r\n          <FiMail size={20} color=\"#ccc\" />\r\n        </label>\r\n        <input \r\n          type=\"email\" \r\n          className=\"input\" \r\n          placeholder=\"Digite seu e-mail\" \r\n          id=\"email-cadastro\"\r\n          onChange={e=> setEmail(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"group-inputs\">\r\n        <label htmlFor=\"senha-cadastro\">\r\n          <FiLock size={20} color=\"#ccc\" />\r\n        </label>\r\n        <input \r\n          type=\"password\" \r\n          className=\"input\" \r\n          placeholder=\"Digite uma senha\" \r\n          id=\"senha-cadastro\" \r\n          onChange={e=> setSenha(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"group-inputs\">\r\n        <label htmlFor=\"senha2-cadastro\">\r\n          <FiLock size={20} color=\"#ccc\" />\r\n        </label>\r\n        <input \r\n          type=\"password\" \r\n          className=\"input\" \r\n          placeholder=\"Digite novamente a senha\" \r\n          id=\"senha2-cadastro\" \r\n          onChange={e=> setVerificaSenha(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\">\r\n        Cadastrar\r\n        {carregando && (\r\n          <img src={load} alt=\"\" className=\"loading\"/>\r\n        )}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default withRouter(Cadastro);","import {useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport {FiMail, FiLock} from 'react-icons/fi';\r\n\r\nimport load from '../../assets/load.gif';\r\nimport '../styles/cadastro.css';\r\n\r\nimport {authenticate} from '../../services/auth';\r\n// import AuthContext from '../../services/contexts';\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  const [erro, setErro] = useState('');\r\n  const [carregando, setCarregando] = useState(false);\r\n\r\n  async function logar(e){\r\n    e.preventDefault();\r\n    setCarregando(true);\r\n    let [status, message] = await authenticate(email, senha);\r\n    setCarregando(false);\r\n\r\n     if(status === 'sucesso'){\r\n       props.history.push('/dashboard')\r\n      }\r\n      setErro(message)\r\n\r\n  }\r\n\r\n  \r\n  return (\r\n    <form className=\"form-cadastro\" onSubmit={logar}>\r\n      {erro && <p>{erro}</p>}\r\n      <div className=\"group-inputs\">\r\n        <label htmlFor=\"email-login\">\r\n          <FiMail size={20} color=\"#ccc\" />\r\n        </label>\r\n        <input type=\"email\" className=\"input\" placeholder=\"Digite seu e-mail\" id=\"email-login\" onChange={ e=> setEmail(e.target.value) }/>\r\n      </div>\r\n      <div className=\"group-inputs\">\r\n        <label htmlFor=\"senha-login\">\r\n          <FiLock size={20} color=\"#ccc\" />\r\n        </label>\r\n        <input type=\"password\" className=\"input\" placeholder=\"Digite sua senha\" id=\"senha-login\" onChange={ e=> setSenha(e.target.value) } />\r\n      </div>\r\n\r\n      <button type=\"submit\">\r\n        Acessar\r\n        {carregando && (\r\n          <img src={load} alt=\"\" className=\"loading\"/>\r\n        )}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);","export default __webpack_public_path__ + \"static/media/imagemLogin.c3788f34.svg\";","export default __webpack_public_path__ + \"static/media/logotipo.6faf9eae.svg\";","export default __webpack_public_path__ + \"static/media/imgFundo.86b76d7b.svg\";","import { useState, useEffect } from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Link } from 'react-router-dom';\r\nimport {FiArrowLeft} from 'react-icons/fi';\r\n\r\nimport Cadastro from '../../components/Cadastro';\r\nimport Login from '../../components/Login';\r\n\r\n\r\nimport image from '../../assets/imagemLogin.svg';\r\nimport logo from '../../assets/logotipo.svg';\r\nimport imgFundo from '../../assets/imgFundo.svg';\r\n\r\nimport '../../styles/home.css'\r\nimport { isAuthenticated } from '../../services/auth';\r\n\r\nfunction Home(props) {\r\n  const [exibir, setExibir] = useState();\r\n  const [texto, setTexto] = useState();\r\n\r\n  const btnsHome = <>\r\n    <Link to=\"/\" className=\"btnLogin\" onClick={acessar}>Acessar</Link>\r\n    <Link to='/' className=\"btnCadastro\" onClick={cadastrar}>Cadastre-se</Link>\r\n  </>\r\n\r\n  const txtHome =  <>\r\n    <h1>Sistema para monitoramento do ambiente.</h1>\r\n    <p>Monitore em tempo real a segurança do ambiente contra a propagação de doenças respiratórias.</p>\r\n  </>\r\n\r\n  function voltar(){\r\n    setExibir(\r\n      btnsHome\r\n    );\r\n    setTexto(\r\n      txtHome\r\n    );\r\n  }\r\n\r\n  function cadastrar(){\r\n    setExibir(<Cadastro />);\r\n    setTexto(\r\n      <>\r\n        <h1>Cadastro</h1>\r\n        <button type=\"button\" className=\"btnVoltar\" onClick={voltar}>\r\n          <FiArrowLeft size={20} color=\"#888\"/>\r\n          <span>voltar</span>\r\n        </button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  async function acessar(){\r\n    console.log( await isAuthenticated())\r\n    if(await isAuthenticated()){\r\n      props.history.push('/dashboard')\r\n    }else{\r\n      setExibir(<Login/>)\r\n      setTexto(\r\n        <>\r\n          <h1>Acessar painel</h1>\r\n          <p>Digite seu e-mail e senha informados em seu cadastro para acessar seu painel.</p>\r\n          <button type=\"button\" className=\"btnVoltar\" onClick={voltar}>\r\n            <FiArrowLeft size={20} color=\"#888\"/>\r\n            <span>voltar</span>\r\n          </button>\r\n        </>\r\n      )\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setExibir(\r\n      btnsHome\r\n    )\r\n    setTexto(\r\n      txtHome\r\n    )\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"login-container\" style={{ backgroundImage: `url(${imgFundo})` }}>\r\n      <div className=\"container\">\r\n        <div className=\"esquerda\">\r\n          <img src={logo} alt=\"Logotipo\" />\r\n          {texto}\r\n\r\n          {exibir}\r\n\r\n\r\n        </div>\r\n        <div className=\"direita\">\r\n          <img src={image} alt=\"Home\" />\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Home);","export default __webpack_public_path__ + \"static/media/logomini2.7afb1194.svg\";","import { useState, useEffect } from 'react';\r\nimport { Link, withRouter, NavLink } from 'react-router-dom';\r\nimport { logout } from '../../services/auth';\r\nimport { FiBarChart2, FiUser, FiLogOut, FiGrid, FiCpu, FiMessageSquare } from 'react-icons/fi';\r\n\r\nimport logomini from '../../assets/logomini2.svg';\r\n\r\nimport '../styles/menu.css'\r\n\r\nfunction Menu(props) {\r\n  const [user, setUser] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    setUser(sessionStorage.getItem('nome'))\r\n    setEmail(sessionStorage.getItem('email'))\r\n  }, [])\r\n\r\n  function sair() {\r\n    logout();\r\n    props.history.push('/');\r\n  }\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"menu-user\">\r\n        <img src={logomini} alt=\"\" />\r\n\r\n        <div className=\"user\">\r\n          <h6>{user}</h6>\r\n          <p>{email}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <ul className=\"menu-list\">\r\n        <li>\r\n          <NavLink activeClassName=\"selected\" to='/dashboard'>\r\n            <FiBarChart2 size={18} color=\"#524E4E\" />\r\n            <span>Dashboard</span>\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink activeClassName=\"selected\" to='/grupos'>\r\n            <FiGrid size={18} color=\"#524E4E\" />\r\n            <span>Grupos</span>\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink activeClassName=\"selected\" to='/equipamentos'>\r\n            <FiCpu size={18} color=\"#524E4E\" />\r\n            <span>Equipamentos</span>\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink activeClassName=\"selected\" to='/perfil'>\r\n            <FiUser size={18} color=\"#524E4E\" />\r\n            <span>Perfil</span>\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <Link to='#'>\r\n            <FiMessageSquare size={18} color=\"#524E4E\" />\r\n            <span>Suporte</span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to='#' onClick={sair}>\r\n            <FiLogOut size={18} color=\"#524E4E\" />\r\n            <span>Sair</span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Menu);","import {useState, useEffect} from 'react'\r\nimport api from '../../services/api';\r\nimport '../styles/setorCards.css';\r\n\r\nfunction CardGrupo({grupo, valor, qtdEquipamentos, exibe, id}) {\r\n  const [cor, setCor] = useState('transparent')\r\n  const [progresso, setProgresso] = useState((Number(valor) * 100) / 3000);\r\n  const [nome, setNome] = useState('');\r\n\r\n\r\n  function clickCard(){\r\n    exibe({\r\n      grupo,\r\n      id\r\n    })\r\n  }\r\n\r\n  async function loadNomeEquipamento(){\r\n    let {data} = await api.get(`/equipamentos/valor/${valor}`);\r\n    if(data.status === 'sucesso'){\r\n      setNome(data.nome)\r\n    }else{\r\n      console.log(data.message);\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n\r\n    if(progresso > 0 && progresso <= 25){\r\n      setCor('#20E647')\r\n    }\r\n    if(progresso > 25 && progresso <=50){\r\n      setCor('#ffd307')\r\n    }\r\n    if(progresso > 50){\r\n      setCor('#f44336')\r\n    }\r\n\r\n    if(progresso > 100){\r\n      setProgresso(100)\r\n    }\r\n\r\n  }, [progresso])\r\n\r\n  useEffect(()=>{\r\n    if(valor){\r\n      loadNomeEquipamento()\r\n    }\r\n  }, [valor])\r\n\r\n  return (\r\n    <div className=\"card\" onClick={clickCard}>\r\n      <div className=\"description\">\r\n        <h3>{grupo}</h3>\r\n        <p>{qtdEquipamentos} equipamento(s) cadastrado(s).</p>\r\n        <p style={{color: 'red', marginBottom: 10}}>2 equipamentos com valor acima de 700ppm</p>\r\n        {nome && <p>Valor de medição mais crítico <b>{nome}</b></p>}\r\n      </div>\r\n      <div className=\"progresso\">\r\n        {valor ? (\r\n          <h3>{valor} <small>ppm</small></h3>\r\n          ):(\r\n            <h3>0 <small>ppm</small></h3>\r\n          )}\r\n            <div className=\"progress\">\r\n              <div className=\"bar-progress\" style={{width: progresso+'%', backgroundColor:cor}}></div>\r\n            </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardGrupo;","import { useEffect, useState } from 'react';\r\nimport api from '../../services/api';\r\nimport Slider from \"react-slick\";\r\n// import OwlCarousel from 'react-owl-carousel';\r\n// import 'owl.carousel/dist/assets/owl.carousel.min.css'\r\n// import 'owl.carousel/dist/assets/owl.theme.default.min.css';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport Card from '../CardGrupo';\r\n\r\nimport '../styles/setores.css'\r\n\r\nfunction Grupos({ infos }) {\r\n  const [items, setItems] = useState(5);\r\n  const [inicial, setInicial] = useState(0);\r\n  const [tag, setTag] = useState();\r\n  const responsive = {\r\n    1400: {\r\n      items: 4\r\n    }\r\n  }\r\n\r\n  const settings = {\r\n    arrows: true,\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  function loadInfos(info) {\r\n    infos(info)\r\n  }\r\n\r\n  async function loadSetores() {\r\n    let { data } = await api.get('/grupos');\r\n\r\n    let { status, message, grupos } = data;\r\n\r\n    if (status === 'sucesso') {\r\n\r\n      setItems(grupos.length)\r\n      setInicial(grupos[0].id);\r\n\r\n      // setTag(<OwlCarousel\r\n      //   className=\"owl-theme\"\r\n      //   items={items < 3 ? items : 3}\r\n      //   dots\r\n      //   margin={15}\r\n\r\n      //   responsive={responsive}\r\n      // >\r\n      //   {grupos.map(grupo => {\r\n      //     return (\r\n      //       <Card\r\n      //         key={grupo.id}\r\n      //         grupo={grupo.grupo}\r\n      //         id={grupo.id}\r\n      //         valor={grupo.max_medicao}\r\n      //         qtdEquipamentos={grupo.qtd_equipamentos}\r\n      //         exibe={info => loadInfos(info)}\r\n      //       />\r\n\r\n      //     )\r\n      //   }\r\n\r\n      //   )}\r\n      // </OwlCarousel>)\r\n\r\n      setTag(<Slider {...settings}\r\n      >\r\n        {grupos.map(grupo => {\r\n          return (\r\n            <Card\r\n              key={grupo.id}\r\n              grupo={grupo.grupo}\r\n              id={grupo.id}\r\n              valor={grupo.max_medicao}\r\n              qtdEquipamentos={grupo.qtd_equipamentos}\r\n              exibe={info => loadInfos(info)}\r\n            />\r\n\r\n          )\r\n        }\r\n\r\n        )}\r\n      </Slider>)\r\n\r\n\r\n\r\n\r\n    } else {\r\n      alert(message)\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    loadSetores()\r\n    infos(inicial)\r\n  }, [inicial])\r\n\r\n  return (\r\n    <section className=\"setores\">\r\n\r\n      <div className=\"container\">\r\n        <h2>Grupos</h2>\r\n\r\n        {tag && tag}\r\n\r\n\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Grupos;","import { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport 'moment/locale/pt-br';\r\n\r\n\r\n\r\nimport { FiArrowRight } from 'react-icons/fi';\r\nimport api from '../../services/api';\r\n\r\n\r\nmoment.locale('pt-br')\r\n\r\n\r\nfunction Equipamento({ porcentagem, ppm, token, clicou, atualiza, finaliza }) {\r\n  const [corHumidade, setCorHumidade] = useState('#20E647');\r\n  const [corTemperatura, setCorTemperatura] = useState('#20E647');\r\n  const [corGas, setCorGas] = useState('#20E647');\r\n  const [humidadeValor, setHumidade] = useState('');\r\n  const [gas, setGas] = useState('');\r\n  const [temperaturaValor, setTemperatura] = useState('');\r\n  const [ultimaMedicao, setUltimaMedicao] = useState('');\r\n  const [porcentagemTemp, setPorcentagemTemp] = useState(0);\r\n  const [porcentagemGas, setPorcentagemGas] = useState(0);\r\n\r\n  async function loadDados() {\r\n    console.log('carregando...')\r\n    let { data } = await api.get(`/dashboard?token=${token}`);\r\n    console.log(token, data);\r\n    let { medicao, status, message } = data;\r\n\r\n    if (status === 'sucesso') {\r\n      if (medicao.length > 0) {\r\n        let humidade;\r\n        let qt_ppm;\r\n        let temperatura;\r\n        try {\r\n          humidade = medicao[0].humidade;\r\n        } catch (e) {\r\n\r\n        }\r\n        try {\r\n          qt_ppm = medicao[0].qt_ppm;\r\n        } catch (e) {\r\n\r\n        }\r\n        try {\r\n          temperatura = medicao[0].temperatura;\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        if (humidade) {\r\n          setHumidade(humidade);\r\n          if (humidade < 12) {\r\n            setCorHumidade('#f44336');\r\n          }\r\n          if (humidade >= 12 && humidade <= 20) {\r\n            setCorHumidade('#ff8100');\r\n          }\r\n          if (humidade > 21 && humidade <= 30) {\r\n            setCorHumidade('#ffd307');\r\n          }\r\n          if (humidade > 31 && humidade <= 60) {\r\n            setCorHumidade('#0085CA');\r\n          }\r\n          if (humidade > 60) {\r\n            setCorHumidade('#20E647')\r\n          }\r\n\r\n        }\r\n\r\n        if (temperatura) {\r\n          setTemperatura(temperatura);\r\n          let calcTemp = (Number(temperatura) * 100) / 60;\r\n          if (temperatura <= 22) {\r\n            setCorTemperatura('#ff8100')\r\n          }\r\n          if (temperatura > 22 && temperatura <= 28) {\r\n            setCorTemperatura('#20E647')\r\n          }\r\n\r\n          if (temperatura > 28) {\r\n            setCorTemperatura('#f44336')\r\n          }\r\n          setPorcentagemTemp(calcTemp);\r\n\r\n        }\r\n\r\n        if (qt_ppm) {\r\n          setGas(qt_ppm);\r\n          if (qt_ppm <= 700) {\r\n            setCorGas('#20E647');\r\n          }\r\n          if (qt_ppm > 700 && qt_ppm <= 1500) {\r\n            setCorGas('#ffd307')\r\n          }\r\n          if (qt_ppm > 1500) {\r\n            setCorGas('#f44336')\r\n          }\r\n          let calcGas = (Number(qt_ppm * 100)) / 3000;\r\n          setPorcentagemGas(calcGas);\r\n\r\n        }\r\n        setUltimaMedicao(medicao[0].criado);\r\n      }\r\n\r\n\r\n\r\n    } else {\r\n      console.log(status, message);\r\n    }\r\n    console.log('carregado')\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    loadDados();\r\n  }, [token])\r\n\r\n  useEffect(() => {\r\n    if (atualiza) {\r\n      loadDados();\r\n      finaliza();\r\n    }\r\n  }, [atualiza])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"status-medicoes\">\r\n        <div className=\"statusHumidade\">\r\n          <div className=\"infoMedicao\">\r\n            <span>Humidade:</span>\r\n            <span>{humidadeValor}%</span>\r\n          </div>\r\n          <div className=\"fundoStatus\">\r\n            <div className=\"medicaoHumidade\" style={{ width: humidadeValor + '%', background: corHumidade }}></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"statusTemperatura\">\r\n          <div className=\"infoMedicao\">\r\n            <span>Temperatura:</span>\r\n            <span>{temperaturaValor} ºC</span>\r\n          </div>\r\n          <div className=\"fundoStatus\">\r\n            <div className=\"medicaoTemperatura\" style={{\r\n              width: porcentagemTemp + '%',\r\n              background: corTemperatura\r\n            }}></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"statusGas\">\r\n          <div className=\"infoMedicao\">\r\n            <span>Gás Carbônico:</span>\r\n            <span>{gas} ppm</span>\r\n          </div>\r\n          <div className=\"fundoStatus\">\r\n            <div className=\"medicaoGas\"\r\n              style={{\r\n                width: porcentagemGas + '%',\r\n                background: corGas\r\n              }}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"footer-medicoes\">\r\n        <div className=\"atualizado\">\r\n          <span className=\"title\">Atualizado:</span>\r\n\r\n          <span className=\"horario\">{ultimaMedicao && (\r\n            moment(ultimaMedicao).format(\"DD/MM/YYYY\") + ' - ' +  ultimaMedicao.split('T')[1].split('.')[0]\r\n          )}</span>\r\n\r\n        </div>\r\n        <button onClick={() => clicou()}>Ver medições <FiArrowRight size={16} color=\"#fff\" style={{ marginLeft: 8 }} /></button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Equipamento;","import { useState, useEffect } from 'react';\r\nimport api from '../../services/api';\r\nimport Equipamento from '../Equipamento';\r\n\r\nimport { FiRefreshCcw, FiRefreshCw } from 'react-icons/fi';\r\n\r\nimport '../styles/equipamento.css';\r\n\r\nfunction SectionEquipamentos({ titulo, grupoId, nome, token, open }) {\r\n  const [listEquipamentos, setListEquipamentos] = useState([]);\r\n  const [atualiza, setAtualiza] = useState(false)\r\n\r\n  async function loadEquipamentos() {\r\n    let { data } = await api.get(`/equipamentos/grupo/${grupoId}`);\r\n    let { status, message, equipamentos } = data;\r\n\r\n    if (status === 'sucesso') {\r\n      setListEquipamentos(equipamentos);\r\n    } else {\r\n      alert(message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (grupoId) {\r\n      console.log(grupoId);\r\n      loadEquipamentos();\r\n\r\n    }\r\n  }, [grupoId]);\r\n\r\n  return (\r\n    <section className=\"container equipamentos\">\r\n      <h2>{titulo}</h2>\r\n      <ul className=\"list-equipamentos\">\r\n        {listEquipamentos.map(equipamento => (\r\n          <li key={equipamento.id}>\r\n            <div className=\"tituloEquipamento\">\r\n              <h3>{equipamento.nome}</h3>\r\n              <button\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center'\r\n                }}\r\n                onClick={()=> setAtualiza(true)}\r\n              >\r\n                <FiRefreshCw size={22} color=\"#7a7a7a\"/>\r\n\r\n              </button>\r\n            </div>\r\n            <Equipamento\r\n              token={equipamento.token}\r\n              ppm='150'\r\n              porcentagem={51}\r\n              clicou = { () => {\r\n                nome(equipamento.nome);\r\n                token(equipamento.token);\r\n                open();\r\n              }}\r\n\r\n              atualiza={atualiza}\r\n              finaliza = {()=> setAtualiza(false)}\r\n\r\n            />\r\n          </li>\r\n\r\n        ))}\r\n        {/* <li>\r\n          <h3>107 BLG</h3>\r\n          <Equipamento\r\n            ppm='250'\r\n            porcentagem={25}\r\n            nome='106 BLG'\r\n          />\r\n        </li>\r\n        <li>\r\n          <h3>108 BLG</h3>\r\n          <Equipamento\r\n            ppm='350'\r\n            porcentagem={35}\r\n            nome='107 BLG'\r\n          />\r\n        </li>\r\n        <li>\r\n          <h3>109 BLG</h3>\r\n          <Equipamento\r\n            ppm='450'\r\n            porcentagem={45}\r\n            nome='106 BLG'\r\n          />\r\n        </li>\r\n        <li>\r\n          <h3>110 BLG</h3>\r\n          <Equipamento\r\n            ppm='550'\r\n            porcentagem={55}\r\n            nome='106 BLG'\r\n          />\r\n        </li>\r\n        <li>\r\n          <h3>111 BLG</h3>\r\n          <Equipamento\r\n            ppm='850'\r\n            porcentagem={85}\r\n            nome='106 BLG'\r\n          />\r\n\r\n        </li> */}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SectionEquipamentos;","import { useEffect, useState } from 'react';\r\nimport ApexCharts from 'react-apexcharts';\r\nimport { FiX, FiRefreshCw } from 'react-icons/fi';\r\nimport api from '../../services/api';\r\n\r\nimport '../styles/modalGraficos.css'\r\n\r\nfunction ModalGraficos({ token, open, nome, close }) {\r\n  const [gas, setGas] = useState([]);\r\n  const [temperatura, setTemperatura] = useState([]);\r\n  const [humidade, setHumidade] = useState([]);\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'area-datetime',\r\n      height: 150,\r\n      type: \"area\",\r\n      zoom: {\r\n        autoScaleYaxis: true\r\n      }\r\n    },\r\n\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    series: [\r\n      {\r\n        name: nome,\r\n        data: gas\r\n      },\r\n    ],\r\n    fill: {\r\n      type: \"gradient\",\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        opacityFrom: 0.8,\r\n        opacityTo: 0.9,\r\n        stops: [50, 100, 100]\r\n      }\r\n    },\r\n    annotations: {\r\n      yaxis: [{\r\n        y: 30,\r\n        borderColor: '#999',\r\n        label: {\r\n          show: false,\r\n          text: '',\r\n          style: {\r\n            color: \"#fff\",\r\n            background: '#00E396'\r\n          }\r\n        }\r\n      }],\r\n      xaxis: [{\r\n        x: new Date('31 Dez 2020').getTime(),\r\n        borderColor: '#999',\r\n        yAxisIndex: 0,\r\n        label: {\r\n          show: false,\r\n          text: '',\r\n          style: {\r\n            color: \"#fff\",\r\n            background: '#775DD0'\r\n          }\r\n        }\r\n      }]\r\n    },\r\n    markers: {\r\n      size: 0,\r\n      style: 'hollow',\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n      min: new Date('12 Nov 2020').getTime(),\r\n      tickAmount: 6,\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        format: 'dd MMM yyyy'\r\n      },\r\n      custom: function ({ series, seriesIndex, dataPointIndex, w }) {\r\n        let situacao = \"\";\r\n        let bg = \"\";\r\n\r\n        if (series[seriesIndex][dataPointIndex] >= 700 && series[seriesIndex][dataPointIndex] < 1000) {\r\n          situacao = \"Atenção\";\r\n          bg = \"yellow\"\r\n\r\n        }\r\n        if (series[seriesIndex][dataPointIndex] >= 1000) {\r\n          situacao = \"Crítica\";\r\n          bg = \"red\"\r\n\r\n        }\r\n        if (series[seriesIndex][dataPointIndex] < 700) {\r\n          situacao = \"Normal\";\r\n          bg = \"green\"\r\n\r\n        }\r\n\r\n\r\n        return '<div class=\"arrow_box ' + bg + '\">' +\r\n          '<div class=\"tooltip-situacao\">' +\r\n          '<span class=\"bg-situacao\"></span>' +\r\n          '<span>' + series[seriesIndex][dataPointIndex] + ' ppm</span>' +\r\n          '</div>' +\r\n          '<div class=\"tooltip-situacao\">' +\r\n          '<span class=\"situacao\">' + situacao + '</span>' +\r\n          '</div>' +\r\n          '</div>'\r\n      }\r\n\r\n    },\r\n    // colors: ['#003366','#546E7A', '#66DA26', '#E91E63', '#FF9800'],\r\n    stroke:{\r\n      width: 2\r\n    }\r\n  };\r\n\r\n  const optionsTemp = {\r\n    chart: {\r\n      id: 'area-datetime',\r\n      height: 150,\r\n      type: \"area\",\r\n      zoom: {\r\n        autoScaleYaxis: true\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    series: [\r\n      {\r\n        name: nome,\r\n        data: temperatura\r\n      },\r\n    ],\r\n    fill: {\r\n      type: \"gradient\",\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        opacityFrom: 0.8,\r\n        opacityTo: 0.9,\r\n        stops: [0, 90, 100]\r\n      }\r\n      \r\n    },\r\n    annotations: {\r\n      yaxis: [{\r\n        y: 30,\r\n        borderColor: '#999',\r\n        label: {\r\n          show: false,\r\n          text: '',\r\n          style: {\r\n            color: \"#fff\",\r\n            background: '#00E396'\r\n          }\r\n        }\r\n      }],\r\n      xaxis: [{\r\n        x: new Date('31 Dez 2020').getTime(),\r\n        borderColor: '#999',\r\n        yAxisIndex: 0,\r\n        label: {\r\n          show: false,\r\n          text: '',\r\n          style: {\r\n            color: \"#fff\",\r\n            background: '#775DD0'\r\n          }\r\n        }\r\n      }]\r\n    },\r\n    markers: {\r\n      size: 0,\r\n      style: 'hollow',\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n      min: new Date('12 Nov 2020').getTime(),\r\n      tickAmount: 6,\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        format: 'dd MMM yyyy'\r\n      },\r\n      custom: function ({ series, seriesIndex, dataPointIndex, w }) {\r\n        let situacao = \"\";\r\n        let bg = \"\";\r\n\r\n        if (series[seriesIndex][dataPointIndex] > 28) {\r\n          situacao = \"Quente\";\r\n          bg = \"red\"\r\n\r\n        }\r\n        if (series[seriesIndex][dataPointIndex] > 22 && series[seriesIndex][dataPointIndex] <= 28) {\r\n          situacao = \"Ambiente\";\r\n          bg = \"green\"\r\n\r\n        }\r\n        if (series[seriesIndex][dataPointIndex] <= 22) {\r\n          situacao = \"Frio\";\r\n          bg = \"orange\"\r\n        }\r\n\r\n\r\n        return '<div class=\"arrow_box ' + bg + '\">' +\r\n          '<div class=\"tooltip-situacao\">' +\r\n          '<span class=\"bg-situacao\"></span>' +\r\n          '<span>' + series[seriesIndex][dataPointIndex] + 'ºC </span>' +\r\n          '</div>' +\r\n          '<div class=\"tooltip-situacao\">' +\r\n          '<span class=\"situacao\">' + situacao + '</span>' +\r\n          '</div>' +\r\n          '</div>'\r\n      }\r\n    },\r\n    // colors: ['#FF9800'],\r\n    stroke: {\r\n      width: 2\r\n    }\r\n  };\r\n\r\n  const optionsHum = {\r\n    chart: {\r\n      id: 'area-datetime',\r\n      height: 150,\r\n      type: \"area\",\r\n      zoom: {\r\n        autoScaleYaxis: true\r\n      }\r\n    },\r\n    stroke: {\r\n      width: 2\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    series: [\r\n      {\r\n        name: nome,\r\n        data: humidade\r\n      },\r\n    ],\r\n    fill: {\r\n      type: \"gradient\",\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        opacityFrom: 0.8,\r\n        opacityTo: 0.9,\r\n        stops: [0, 90, 100]\r\n      }\r\n    },\r\n    annotations: {\r\n      yaxis: [{\r\n        y: 30,\r\n        borderColor: '#999',\r\n        label: {\r\n          show: false,\r\n          text: '',\r\n          style: {\r\n            color: \"#fff\",\r\n            background: '#00E396'\r\n          }\r\n        }\r\n      }],\r\n      xaxis: [{\r\n        x: new Date('31 Dez 2020').getTime(),\r\n        borderColor: '#999',\r\n        yAxisIndex: 0,\r\n        label: {\r\n          show: false,\r\n          text: '',\r\n          style: {\r\n            color: \"#fff\",\r\n            background: '#775DD0'\r\n          }\r\n        }\r\n      }]\r\n    },\r\n    markers: {\r\n      size: 0,\r\n      style: 'hollow',\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n      min: new Date('12 Nov 2020').getTime(),\r\n      tickAmount: 6,\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        format: 'dd MMM yyyy'\r\n      },\r\n      custom: function ({ series, seriesIndex, dataPointIndex, w }) {\r\n        let situacao = \"\";\r\n        let bg = \"\";\r\n\r\n        if (series[seriesIndex][dataPointIndex] < 12) {\r\n          situacao = \"Crítica\";\r\n          bg = \"red\"\r\n\r\n        }\r\n        if (series[seriesIndex][dataPointIndex] >= 12 && series[seriesIndex][dataPointIndex] <= 20) {\r\n          situacao = \"Alerta\";\r\n          bg = \"orange\"\r\n\r\n        }\r\n        if (series[seriesIndex][dataPointIndex] > 21 && series[seriesIndex][dataPointIndex] <= 30) {\r\n          situacao = \"Atenção\";\r\n          bg = \"yellow\"\r\n        }\r\n        if (series[seriesIndex][dataPointIndex] > 31 && series[seriesIndex][dataPointIndex] <= 60) {\r\n          situacao = \"Aceitável\";\r\n          bg = \"blue\"\r\n        }\r\n        if (series[seriesIndex][dataPointIndex] > 60) {\r\n          situacao = \"Ótima\";\r\n          bg = \"green\"\r\n        }\r\n\r\n\r\n        return '<div class=\"arrow_box ' + bg + '\">' +\r\n          '<div class=\"tooltip-situacao\">' +\r\n          '<span class=\"bg-situacao\"></span>' +\r\n          '<span>' + series[seriesIndex][dataPointIndex] + '% </span>' +\r\n          '</div>' +\r\n          '<div class=\"tooltip-situacao\">' +\r\n          '<span class=\"situacao\">' + situacao + '</span>' +\r\n          '</div>' +\r\n          '</div>'\r\n      }\r\n    },\r\n  };\r\n\r\n  async function loadMedicoes() {\r\n\r\n    let { data } = await api.get(`/medicao/${token}`);\r\n    let { status, message, medicoes } = data;\r\n    let array = [];\r\n    let arrayTemp = [];\r\n    let arrayHum = [];\r\n    if (status === 'sucesso') {\r\n      medicoes.map(item => {\r\n        array.push([item.criado, item.qt_ppm])\r\n        arrayTemp.push([item.criado, item.temperatura])\r\n        arrayHum.push([item.criado, item.humidade])\r\n      });\r\n      setGas(array)\r\n      setHumidade(arrayHum);\r\n      setTemperatura(arrayTemp);\r\n    } else {\r\n      console.log(message, status)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      loadMedicoes();\r\n    }\r\n\r\n  }, [open])\r\n  return (\r\n    <>\r\n      <div className={open + \" modal-medicoes\"}>\r\n        <button\r\n          onClick={() => close()}\r\n          style={{\r\n            background: '#fff',\r\n            padding: 6,\r\n            borderRadius: 8,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            position: 'fixed',\r\n            top: 20,\r\n            right: 20\r\n          }}>\r\n          <FiX size={18} color=\"#333\" />\r\n        </button>\r\n        <div className=\"linear\" style={{ width: '100%' }}>\r\n          <div className=\"modal-header\"\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'space-between',\r\n              marginBottom: 16,\r\n\r\n            }}\r\n          >\r\n            <h2>{nome}</h2>\r\n            <button\r\n              onClick={() => loadMedicoes()}\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n              }}>\r\n              <FiRefreshCw size={25} color=\"#7a7a7a\" />\r\n            </button>\r\n          </div>\r\n\r\n          <h3>Medições de Gás Carbônico (CO²)</h3>\r\n          <ApexCharts\r\n            options={options}\r\n            type=\"area\"\r\n            height={280}\r\n            width=\"100%\"\r\n            series={options.series}\r\n          />\r\n\r\n          <h3>Medições da Humidade Relativa do Ar</h3>\r\n          <ApexCharts\r\n            options={optionsHum}\r\n            type=\"area\"\r\n            height={280}\r\n            width=\"100%\"\r\n            series={optionsHum.series}\r\n          />\r\n\r\n          <h3>Medições da Temperatura</h3>\r\n          <ApexCharts\r\n            options={optionsTemp}\r\n            type=\"area\"\r\n            height={280}\r\n            width=\"100%\"\r\n            series={optionsTemp.series}\r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalGraficos;","export default __webpack_public_path__ + \"static/media/tutorial.a7c12abb.svg\";","import { useState, useEffect } from 'react';\r\nimport api from '../../services/api';\r\nimport Menu from '../../components/Menu';\r\nimport Grupos from '../../components/GrupoLista';\r\nimport Equipamentos from '../../components/SectionEquipamentos';\r\n\r\nimport ApexCharts from 'react-apexcharts';\r\n\r\n\r\nimport Modal from '../../components/ModalGraficos';\r\n// import Linear from '../../components/SectionLinear';\r\n\r\nimport tutorial from '../../assets/tutorial.svg';\r\nimport '../../styles/dashboard.css'\r\n\r\nfunction Dashboard() {\r\n  const [grupoId, setgrupoId] = useState('');\r\n  const [grupoNome, setGrupoNome] = useState('');\r\n  const [eqNome, setEqNome] = useState('');\r\n  const [eqToken, setEqToken] = useState('');\r\n  const [open, setOpen] = useState('');\r\n\r\n  const options = {\r\n    chart: {\r\n      type: 'donut'\r\n    },\r\n    series: [5, 1, 2],\r\n    labels: ['Bom', 'Moderado', 'Crítico'],\r\n    colors: ['#00e04f','#ffb91a', '#ff1a1a'],\r\n    dataLabels: {\r\n      enabled: true,\r\n      formatter: function(value, { seriesIndex, dataPointIndex, w }) {\r\n        return w.config.series[seriesIndex]\r\n      },\r\n      background: {\r\n        enabled: false,\r\n        foreColor: '#fff',\r\n        padding: 4,\r\n        borderRadius: 2,\r\n        borderWidth: 1,\r\n        borderColor: '#fff',\r\n        opacity: 0.9,\r\n        dropShadow: {\r\n          enabled: false,\r\n          top: 1,\r\n          left: 1,\r\n          blur: 1,\r\n          color: '#000',\r\n          opacity: 0.45\r\n        }\r\n      },\r\n\r\n\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        startAngle: 0,\r\n        expandOnClick: true,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        customScale: 1,\r\n        dataLabels: {\r\n          offset: 0,\r\n          minAngleToShowLabel: 10\r\n        },\r\n        donut: {\r\n          size: '60%',\r\n          background: 'transparent',//circulo de dentro\r\n          labels: {\r\n            show: true,\r\n            name: {\r\n              show: true,\r\n              fontSize: '22px',\r\n              fontFamily: 'Helvetica, Arial, sans-serif',\r\n              fontWeight: 600,\r\n              color: '#000',//primeiro texto\r\n              offsetY: -10,\r\n              formatter: function (val) {\r\n                return val\r\n              }\r\n            },\r\n            value: {\r\n              show: true,\r\n              fontSize: '16px',\r\n              fontFamily: 'Helvetica, Arial, sans-serif',\r\n              fontWeight: 400,\r\n              color: 'red',//segundo texto\r\n              offsetY: 16,\r\n              formatter: function (val) {\r\n                return val\r\n              }\r\n            },\r\n            total: {\r\n              show: false,\r\n              showAlways: false,\r\n              label: 'Total',\r\n              fontSize: '22px',\r\n              fontFamily: 'Helvetica, Arial, sans-serif',\r\n              fontWeight: 600,\r\n              color: '#373d3f',\r\n              formatter: function (w) {\r\n                return w.globals.seriesTotals.reduce((a, b) => {\r\n                  return a + b\r\n                }, 0)\r\n              }\r\n            }\r\n          },\r\n\r\n        },\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n      showForSingleSeries: false,\r\n      showForNullSeries: true,\r\n      showForZeroSeries: true,\r\n      position: 'bottom',\r\n      horizontalAlign: 'center',\r\n      floating: false,\r\n      fontSize: '14px',\r\n      fontFamily: 'Helvetica, Arial',\r\n      fontWeight: 400,\r\n      formatter: undefined,\r\n      inverseOrder: false,\r\n      width: undefined,\r\n      height: undefined,\r\n      tooltipHoverFormatter: undefined,\r\n      offsetX: 0,\r\n      offsetY: 0,\r\n      labels: {\r\n        colors: undefined,\r\n        useSeriesColors: false\r\n      },\r\n      markers: {\r\n        width: 12,\r\n        height: 12,\r\n        strokeWidth: 0,\r\n        strokeColor: '#fff',\r\n        fillColors: ['#00e04f','#ffb91a', '#ff1a1a'],\r\n        radius: 12,\r\n        customHTML: undefined,\r\n        onClick: undefined,\r\n        offsetX: 0,\r\n        offsetY: 0\r\n      },\r\n      itemMargin: {\r\n        horizontal: 5,\r\n        vertical: 0\r\n      },\r\n      onItemClick: {\r\n        toggleDataSeries: true\r\n      },\r\n      onItemHover: {\r\n        highlightDataSeries: true\r\n      },\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  async function loadEquipamentos() {\r\n    //let {data} = await api.get(`/grupos/${infos.id}`);\r\n    // console.log(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    //loadEquipamentos();\r\n  }, [grupoId])\r\n\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <div className=\"painel\">\r\n        <div className=\"container dash\">\r\n          <section >\r\n            <div style={{\r\n              width: '33.33%',\r\n              background: '#fff',\r\n              padding: 16,\r\n              borderRadius: 8\r\n            }}>\r\n              <h3>Sala Inovação</h3>\r\n              <ApexCharts options={options} series={options.series} type=\"donut\" width=\"100%\" height='auto' />\r\n\r\n            </div>\r\n          </section>\r\n\r\n          <Grupos\r\n            infos={({ grupo, id }) => {\r\n              setgrupoId(id);\r\n              setGrupoNome(grupo);\r\n            }}\r\n          />\r\n          <Equipamentos\r\n            titulo={grupoNome}\r\n            grupoId={grupoId}\r\n            nome={nome => setEqNome(nome)}\r\n            token={token => setEqToken(token)}\r\n            open={() => setOpen('open')}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <Modal\r\n        nome={eqNome}\r\n        token={eqToken}\r\n        open={open}\r\n        close={() => { setOpen(''); setEqNome(''); setEqToken('') }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","import { useState } from 'react';\r\nimport api from '../../services/api';\r\nimport { FiX } from 'react-icons/fi';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\nimport '../styles/modalcadastro.css';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\n\r\n\r\nfunction ModalGrupo({ open, fechar, load }) {\r\n  const [grupo, setGrupo] = useState('');\r\n\r\n  async function Cadastrar(e) {\r\n    e.preventDefault();\r\n\r\n    MySwal.fire({\r\n      title: 'Tem certeza que criar esse grupo?',\r\n      text: 'o nome do grupo está correto? - ' + grupo,\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Tenho certeza!',\r\n      cancelButtonText: 'Cancelar',\r\n      padding: 48\r\n    }).then(async (result) => {\r\n\r\n      if (result.value) {\r\n        let { data } = await api.post('/grupos', { grupo });\r\n        let { status, message } = data;\r\n\r\n        if (status === 'sucesso') {\r\n          await MySwal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Grupo criado com sucesso!',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n\r\n          })\r\n          setGrupo('');\r\n          fechar();\r\n          load();\r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: message,\r\n          })\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={\"modal-cadastro-grupo \" + open}>\r\n      <div className=\"modal-container\">\r\n        <h2>CADASTRAR NOVO GRUPO</h2>\r\n        <p>Insira o nome do grupo que quer criar e clique em cadastrar.</p>\r\n\r\n        <form onSubmit={Cadastrar}>\r\n          <label htmlFor=\"nome-grupo\">Nome do grupo:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nome-grupo\"\r\n            id=\"nome-grupo\"\r\n            value={grupo}\r\n            onChange={e => setGrupo(e.target.value)}\r\n          />\r\n\r\n          <div className=\"buttons\">\r\n            <button className=\"cancelar\" onClick={e => { e.preventDefault(); setGrupo(''); fechar() }}>\r\n              <FiX color=\"#fff\" size={20} />\r\n            </button>\r\n            <button type=\"submit\" className=\"cadastrar\">CADASTRAR</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalGrupo;","import { useState, useEffect } from 'react';\r\nimport {FiX} from 'react-icons/fi';\r\nimport api from '../../services/api';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nimport '../styles/modalcadastro.css';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nfunction ModalGrupo({open, fechar, nome, grupoId, load}) {\r\n  const [novoNome, setNovoNome] = useState('');\r\n\r\n  async function atualizar(e,id){\r\n    e.preventDefault();\r\n    \r\n\t\tMySwal.fire({\r\n      title: 'Tem certeza que atualizar esse grupo?',\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonText:'Tenho certeza!',\r\n      cancelButtonText:'Cancelar',\r\n      padding: 48\r\n\t\t}).then(async (result) => {\r\n      \r\n      if(result.value){\r\n        let{data} = await api.put(`/grupos/${grupoId}`, {grupo: novoNome});\r\n        let{status, message} = data;\r\n\t\t\t\t\r\n\t\t\t\tif(status === 'sucesso'){\r\n          await MySwal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Grupo atualizado com sucesso!',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n\r\n          })\r\n          load()\r\n          fechar();\r\n        }else{\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: message,\r\n          })\r\n        }\r\n        \r\n\t\t\t}\r\n\t\t})\r\n    \r\n  }\r\n\r\n  useEffect(()=>{\r\n    setNovoNome(nome);\r\n    console.log(nome.length)\r\n  },[nome])\r\n  \r\n  return (\r\n    <div className={\"modal-cadastro-grupo \" + open}>\r\n      <div className=\"modal-container\">\r\n        <h2>EDITAR NOME DO GRUPO</h2>\r\n        <p>Insira o nome do grupo que deseja e clique em Salvar Alteração.</p>\r\n\r\n        <form onSubmit={atualizar}>\r\n          <label htmlFor=\"nome-grupo\">Nome do grupo:</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"nome-grupo\" \r\n            id=\"nome-grupo\" \r\n            value={novoNome} \r\n            onChange={ e=> setNovoNome(e.target.value)}\r\n            maxLength={31}\r\n          />\r\n\r\n          <div className=\"buttons\">\r\n            <button className=\"cancelar\" onClick={e => {e.preventDefault(); fechar()}}>\r\n              <FiX color=\"#fff\" size={20}/>\r\n            </button>\r\n            <button type=\"submit\" className=\"cadastrar\">SALVAR ALTERAÇÃO</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalGrupo;","import { useState, useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport { FiChevronRight, FiFolderPlus, FiEdit3, FiTrash2 } from 'react-icons/fi';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport Menu from '../../components/Menu';\r\nimport Modal from '../../components/ModalGrupo';\r\nimport ModalEditar from '../../components/ModalGrupoEditar';\r\n\r\nimport '../../styles/grupos.css'\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nfunction Grupos() {\r\n  const [grupos, setGrupos] = useState([]);\r\n  const [isOpen, setIsOpen] = useState('');\r\n  const [isOpenEd, setIsOpenEd] = useState('');\r\n  const [nome, setNome] = useState('');\r\n  const [grupoId, setGrupoId] = useState('');\r\n\r\n  async function loadGrupos() {\r\n    let { data } = await api.get('/grupos');\r\n    let { status, message, grupos } = data;\r\n\r\n    if (status === 'sucesso') {\r\n      setGrupos(grupos)\r\n\r\n    } else {\r\n      console.log(status, message)\r\n    }\r\n\r\n  }\r\n\r\n  async function deletar(id){\r\n\r\n    MySwal.fire({\r\n      title: 'Tem certeza que deseja deletar esse grupo?',\r\n      text: 'Essa alteração não poderá ser desfeita.',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Tenho certeza!',\r\n      cancelButtonText: 'Cancelar',\r\n      padding: 48\r\n    }).then(async (result) =>{\r\n\r\n      if(result.value){\r\n        let {data} = await api.delete(`/grupos/${id}`);\r\n        let{status, message} = data;\r\n        \r\n        if(status===\"sucesso\"){\r\n          loadGrupos();\r\n          await MySwal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Grupo deletado com sucesso!',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          })\r\n        }else{\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: message\r\n          })\r\n        }\r\n      }\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n  function fechar(){\r\n    setIsOpen('');\r\n    setIsOpenEd('');\r\n    setGrupoId('');\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    loadGrupos();\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <div className=\"painel page-grupos\">\r\n        <div className=\"container\">\r\n          <h2>Meus Grupos</h2>\r\n          <div className=\"painel-grupos\">\r\n            <ul className=\"lista-grupos\">\r\n              {grupos.map(grupo => {\r\n                let iniciais = grupo.grupo;\r\n\r\n                try {\r\n                  iniciais = grupo.grupo.split(' ')[0].substring(0, 1) + grupo.grupo.split(' ')[1].substring(0, 1);\r\n\r\n                } catch (e) {\r\n                  iniciais = grupo.grupo.substring(0, 2)\r\n                }\r\n                return (\r\n\r\n                  <li key={grupo.id}>\r\n                    <div className=\"sigla\">\r\n                      <h3>{iniciais}</h3>\r\n                    </div>\r\n                    <div className=\"list-grupo-info\">\r\n                      <h3>{grupo.grupo}</h3>\r\n                      <p>{grupo.qtd_equipamentos} aparelhos</p>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                      <button className=\"btn-lista-grupos-editar\"\r\n                        onClick={() => {\r\n                          setIsOpenEd('open');\r\n                          setNome(grupo.grupo);\r\n                          setGrupoId(grupo.id);\r\n                        }}\r\n                      >\r\n                        <FiEdit3 size={17} color=\"#0572A3\" />\r\n                      </button>\r\n                      <button \r\n                        className=\"btn-lista-grupos-excluir\"\r\n                        onClick={()=> deletar(grupo.id)}\r\n                      >\r\n                        <FiTrash2 size={17} color=\"#FF585A\" />\r\n                      </button>\r\n                    </div>\r\n\r\n                  </li>\r\n\r\n                )\r\n              })}\r\n\r\n              <li onClick={() => setIsOpen('open')}>\r\n                <div className=\"novoGrupo\">\r\n                  <span className=\"icone-novoGrupo\">\r\n                    <FiFolderPlus size={20} color=\"#0572A3\" />\r\n                  </span>\r\n                  <h3>Criar novo grupo</h3>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal \r\n        open={isOpen} \r\n        fechar={fechar} \r\n        load={loadGrupos}\r\n      />\r\n      <ModalEditar \r\n        open={isOpenEd} \r\n        fechar={fechar} \r\n        nome={nome}\r\n        grupoId={grupoId}\r\n        load={loadGrupos} \r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Grupos;","import { useState, useEffect } from 'react';\r\nimport { FiX } from 'react-icons/fi';\r\nimport api from '../../services/api';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n// import Select from 'react-select';\r\n\r\nimport '../styles/modalcadastro.css';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\n\r\nfunction ModalGrupo({ open, fechar, nome, grupoId, load, nomeGrupo, equipamentoId }) {\r\n  const [novoNome, setNovoNome] = useState('');\r\n  // let formSelect = [];\r\n  const [items, setItems] = useState([]);\r\n  const [formSelect, setFormSelect] = useState([])\r\n  const [grupoSelected, setGrupoSelected] = useState('');\r\n  // const [newSelect, setSelect] = useState();\r\n\r\n  // const promiseOptions = async (id) => {\r\n  //   console.log(formSelect)\r\n  //   if (id) {\r\n  //     formSelect = []\r\n  //     let promessa = new Promise(resolve => {\r\n  //       setTimeout(() => {\r\n  //         resolve(api.get(`/grupos/select/${id}`))\r\n  //       }, 15000)\r\n  //     });\r\n\r\n  //     let { data } = await promessa;\r\n\r\n  //     let { status, message, grupos } = data\r\n\r\n  //     if (status === 'sucesso') {\r\n  //       grupos.map(grupo => {\r\n  //         formSelect.push({ value: grupo.id, label: grupo.grupo })\r\n  //       })\r\n  //       // setFormSelect(grupos);\r\n  //     } else {\r\n  //       console.log(status, message)\r\n  //     }\r\n  //     console.log(formSelect)\r\n\r\n  //   }\r\n\r\n  //   return formSelect;\r\n  // }\r\n\r\n  // async function getItems() {\r\n  //   if (grupoId) {\r\n  //     let { data } = await api.get(`/grupos/select/${grupoId}`);\r\n  //     let { status, message, grupos } = data;\r\n\r\n  //     if (status === 'sucesso') {\r\n\r\n  //       const options = grupos.map(grupo => ({ \r\n  //         \"value\": grupo.id, \r\n  //         \"label\": grupo.grupo \r\n  //       }))\r\n  //       setItems(options);\r\n  //     } else {\r\n  //       console.log(status, message)\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  async function atualizar(e) {\r\n    e.preventDefault();\r\n\r\n    MySwal.fire({\r\n      title: 'Tem certeza que as informações estão corretas?',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Tenho certeza!',\r\n      cancelButtonText: 'Cancelar',\r\n      padding: 48\r\n    }).then(async (result) => {\r\n\r\n      if (result.value) {\r\n        let { data } = await api.put(`/equipamentos/${equipamentoId}`, { nome: novoNome, grupoId: grupoSelected });\r\n        let { status, message } = data;\r\n\r\n        if (status === 'sucesso') {\r\n          await MySwal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Grupo atualizado com sucesso!',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n\r\n          })\r\n          load()\r\n          fechar();\r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: message,\r\n          })\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n   async function select(){\r\n     if(!grupoId){\r\n       grupoId = 0\r\n     }\r\n     let {data} = await api.get(`/grupos/select/${grupoId}`);\r\n     let {status, message, grupos} = data;\r\n\r\n     if(status==='sucesso'){\r\n      grupos.map(grupo => {\r\n        formSelect.push({value: grupo.id, label: grupo.grupo})\r\n      })\r\n      setFormSelect(grupos);\r\n     }else{\r\n       console.log(status, message)\r\n     }\r\n   }\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (nome) {\r\n      select();\r\n      setNovoNome(nome);\r\n      setGrupoSelected(grupoId);\r\n\r\n    }\r\n\r\n    // console.log(formSelect)\r\n\r\n  }, [nome, grupoId])\r\n\r\n  return (\r\n    <div className={\"modal-cadastro-grupo \" + open}>\r\n      <div className=\"modal-container\">\r\n        <h2>EDITAR NOME DO GRUPO</h2>\r\n        <p>Insira o nome do grupo que deseja e clique em Salvar Alteração.</p>\r\n\r\n        <form onSubmit={atualizar}>\r\n          <label htmlFor=\"nome-grupo\">Nome do grupo:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nome-grupo\"\r\n            id=\"nome-grupo\"\r\n            value={novoNome}\r\n            onChange={e => setNovoNome(e.target.value)}\r\n            maxLength={31}\r\n          />\r\n          <label htmlFor=\"select-grupo\">Defina o grupo:</label>\r\n          {/* {items.length > 0 && (\r\n            <Select\r\n              defaultValue = {items[Number(grupoId)]}\r\n              options={items}\r\n            />\r\n\r\n          )} */}\r\n\r\n          <select \r\n            name=\"select-grupo\" \r\n            id=\"select-grupo\"\r\n            value={grupoSelected}\r\n            onChange={e => setGrupoSelected(e.target.value)}\r\n          >\r\n            {nomeGrupo ? (\r\n              <option value={grupoId}>{nomeGrupo}</option>\r\n\r\n            ): (\r\n              <option>Selecione um grupo</option>\r\n            )}\r\n            {formSelect.length > 0 && formSelect.map(select =>(\r\n              <option value={select.id} key={select.id}>{select.grupo}</option>\r\n\r\n            ))}\r\n          </select>\r\n          <div className=\"buttons\">\r\n            <button className=\"cancelar\" onClick={e => { e.preventDefault(); fechar() }}>\r\n              <FiX color=\"#fff\" size={20} />\r\n            </button>\r\n            <button type=\"submit\" className=\"cadastrar\">SALVAR ALTERAÇÃO</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalGrupo;","import { useState, useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { FiChevronRight, FiFolderPlus, FiEdit3, FiTrash2, FiBookOpen, FiHelpCircle } from 'react-icons/fi';\r\n\r\nimport api from '../../services/api';\r\nimport Menu from '../../components/Menu';\r\nimport Modal from '../../components/ModalGrupoEditarEq';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nfunction Equipamentos() {\r\n  const [equipamentos, setEquipamentos] = useState([]);\r\n  const [isOpen, setIsOpen] = useState('');\r\n  const [nome, setNome] = useState('');\r\n  const [grupoId, setGrupoId] = useState('');\r\n  const [nomeGrupo, setNomeGrupo] = useState('');\r\n  const [equipamentoId, setEquipamentoId] = useState('');\r\n\r\n  async function loadEquipamentos() {\r\n    let { data } = await api.get(`/equipamentos`);\r\n    let { status, message, equipamentos } = data;\r\n    if (status === 'sucesso') {\r\n      setEquipamentos(equipamentos);\r\n    } else {\r\n      console.log(status, message)\r\n    }\r\n    console.log(data)\r\n  }\r\n\r\n\r\n  async function deletar(id) {\r\n\r\n    MySwal.fire({\r\n      title: 'Tem certeza que deseja deletar esse grupo?',\r\n      text: 'Essa alteração não poderá ser desfeita.',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Tenho certeza!',\r\n      cancelButtonText: 'Cancelar',\r\n      padding: 48\r\n    }).then(async (result) => {\r\n\r\n      if (result.value) {\r\n        let { data } = await api.delete(`/equipamentos/${id}`);\r\n        let { status, message } = data;\r\n\r\n        if (status === \"sucesso\") {\r\n          loadEquipamentos();\r\n          await MySwal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: message,\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          })\r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: message\r\n          })\r\n        }\r\n      }\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    loadEquipamentos();\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <div className=\"painel page-grupos\">\r\n        <div className=\"container\">\r\n          <h2>Meus Equipamentos</h2>\r\n          <div className=\"painel-grupos\">\r\n            <ul className=\"lista-grupos\">\r\n              <li onClick={() => { }}>\r\n                <div className=\"novoGrupo\">\r\n                  <span className=\"icone-novoGrupo\">\r\n                    <FiHelpCircle size={20} color=\"#0572A3\" />\r\n                  </span>\r\n                  <h3>Como cadastrar novo equipamento</h3>\r\n                </div>\r\n              </li>\r\n\r\n              {equipamentos.map(equipamento => {\r\n                return (\r\n                  <li key={equipamento.id}>\r\n                    <div className=\"sigla\">\r\n                      <h3>{equipamento.id}</h3>\r\n                    </div>\r\n                    <div className=\"list-grupo-info\">\r\n                      <h3>{equipamento.nome}</h3>\r\n                      {equipamento.grupo ?(\r\n                        <p>{equipamento.grupo}</p>\r\n                      ):(\r\n                        <p style={{color:\"#7d7d7d\"}}>Defina um grupo</p>\r\n                      ) }\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                      <button className=\"btn-lista-grupos-editar\"\r\n                        onClick={() => {\r\n                          setIsOpen('open');\r\n                          setEquipamentoId(equipamento.id);\r\n                          setNome(equipamento.nome);\r\n                          setGrupoId(equipamento.grupoId);\r\n                          \r\n                          setNomeGrupo(equipamento.grupo)\r\n                        }}\r\n                      >\r\n                        <FiEdit3 size={17} color=\"#0572A3\" />\r\n                      </button>\r\n                      <button\r\n                        className=\"btn-lista-grupos-excluir\"\r\n                        onClick={() => deletar(equipamento.token)}\r\n                      >\r\n                        <FiTrash2 size={17} color=\"#FF585A\" />\r\n                      </button>\r\n                    </div>\r\n\r\n                  </li>\r\n                )\r\n              })}\r\n\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal \r\n        open={isOpen} \r\n        fechar={()=>setIsOpen('')} \r\n        nome={nome}\r\n        grupoId={grupoId}\r\n        nomeGrupo={nomeGrupo}\r\n        load={loadEquipamentos}\r\n        equipamentoId={equipamentoId}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Equipamentos;","import { useState, useEffect } from 'react';\r\nimport { FiMail, FiUser, FiLock } from 'react-icons/fi';\r\nimport api from '../../services/api';\r\nimport Menu from '../../components/Menu';\r\nimport Users from '../../components/Users';\r\n\r\n\r\nimport '../../styles/perfil.css'\r\n\r\nfunction Perfil() {\r\n  const [nome, setNome] = useState(sessionStorage.getItem('nome'));\r\n  const [email, setEmail] = useState(sessionStorage.getItem('email'));\r\n  const [senha, setSenha] = useState('');\r\n  const [classeNome, setClasseNome] = useState('');\r\n  const [classeEmail, setClasseEmail] = useState('');\r\n  const [classeSenha, setClasseSenha] = useState('');\r\n  const [corNome, setCorNome] = useState('#ccc');\r\n  const [corEmail, setCorEmail] = useState('#ccc');\r\n  const [corSenha, setCorSenha] = useState('#ccc');\r\n\r\n  async function atualiza(e){\r\n    e.preventDefault();\r\n    if(!nome){\r\n      setClasseNome('invalid');\r\n      setCorNome('#FF585A')\r\n    }else{\r\n      setClasseNome('valid');\r\n      setCorNome('#33a02c');\r\n    }\r\n\r\n    if(!email){\r\n      setClasseEmail('invalid');\r\n      setCorEmail('#FF585A')\r\n    }else{\r\n      setClasseEmail('valid');\r\n      setCorEmail('#33a02c')\r\n    }\r\n\r\n    if(!nome || !email){\r\n      return\r\n    }\r\n\r\n    if(senha.length >0 && senha.length < 6){\r\n      setClasseSenha('invalid');\r\n      setCorSenha('#FF585A');\r\n    }\r\n\r\n    let{data} = await api.put('/usuarios', {nome, email, senha});\r\n    let {status, message} = data;\r\n\r\n    if(status ==='sucesso'){\r\n      sessionStorage.setItem('nome', data.nome);\r\n      sessionStorage.setItem('email', data.email);\r\n    }else{\r\n      console.log(status, message);\r\n    }\r\n\r\n  }\r\n\r\n  // useEffect(()=>{\r\n  //   setCorSenha('#ccc');\r\n  // },[])\r\n\r\n  useEffect(()=>{\r\n    if(!nome){\r\n      setClasseNome('invalid');\r\n      setCorNome('#FF585A');\r\n    }else{\r\n      setClasseNome('valid');\r\n      setCorNome('#33a02c')\r\n    }\r\n    if(!email){\r\n      setClasseEmail('invalid');\r\n      setCorEmail('#FF585A');\r\n    }else{\r\n      setClasseEmail('valid');\r\n      setCorEmail('#33a02c')\r\n    }\r\n    if(senha.length >0 && senha.length < 6){\r\n      setClasseSenha('invalid');\r\n      setCorSenha('#FF585A')\r\n    }else{\r\n      if(!senha){\r\n        setClasseSenha('');\r\n        setCorSenha('#ccc');\r\n      }else{\r\n        setClasseSenha('valid')\r\n        setCorSenha('#33a02c')\r\n\r\n      }\r\n    }\r\n\r\n\r\n  },[nome,email,senha])\r\n\r\n  return(\r\n    <>\r\n      <Menu />\r\n      <div className=\"painel perfil\">\r\n        <div className=\"container\">\r\n          <div className=\"esquerda\">\r\n            <h2>Editar Perfil</h2>\r\n\r\n            <form onSubmit={atualiza}>\r\n              <div className={classeNome + \" grupo-inputs\"}>\r\n                <label htmlFor=\"editNome\">\r\n                <FiUser size={20} color={corNome} />\r\n                </label>\r\n                <input id=\"editNome\" type=\"text\" placeholder=\"Nome Completo\" value={nome} onChange={ e => setNome(e.target.value)}/>\r\n              </div>\r\n              <div className={classeEmail + \" grupo-inputs\"}>\r\n                <label htmlFor=\"editEmail\">\r\n                <FiMail size={20} color={corEmail} />\r\n                </label>\r\n                <input id=\"editNome\" type=\"email\" placeholder=\"E-mail\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n              </div>\r\n              <div className={classeSenha + \" grupo-inputs\"}>\r\n                <label htmlFor=\"editSenha\">\r\n                <FiLock size={20} color={corSenha} />\r\n                </label>\r\n                <input id=\"editSenha\" type=\"password\" placeholder=\"********\" value={senha} onChange={e => setSenha(e.target.value)}/>\r\n              </div>\r\n\r\n              <button type=\"submit\">Salvar Alterações</button>\r\n            </form>\r\n\r\n          </div>\r\n        </div>\r\n      \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Perfil;","import React from 'react';\r\nimport {  BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { isAuthenticated } from \"./services/auth\";\r\n// admin\r\nimport Home from './pages/Home';\r\nimport Dashboard from './pages/Dashboard';\r\n// import Dashboard2 from './pages/Dash2';\r\nimport Grupos from './pages/Grupos';\r\nimport Equipamentos from './pages/Equipamentos';\r\n// import Testes from './pages/Testes';\r\n// import Login from './pages/Login';\r\nimport Perfil from './pages/Perfil';\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuthenticated() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst Routes = () => (\r\n  \r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />      \r\n      {/* <Route path=\"/login\" exact component={Login} />      \r\n      <Route path=\"/dash\" exact component={Dashboard2} />      \r\n      <Route path=\"/teste\" exact component={Testes} />       */}\r\n      <Route path=\"/grupos\" exact component={Grupos} />      \r\n      <Route path=\"/equipamentos\" exact component={Equipamentos} />      \r\n      <PrivateRoute path=\"/dashboard\" exact component={Dashboard} />      \r\n      <PrivateRoute path=\"/perfil\" exact component={Perfil} />      \r\n\r\n\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Routes;","import Routes from './routes';\nfunction App() {\n  return (\n    <Routes/>\n  );\n}\n\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/global.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}